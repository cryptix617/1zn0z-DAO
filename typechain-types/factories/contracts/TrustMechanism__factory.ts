/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TrustMechanism,
  TrustMechanismInterface,
} from "../../contracts/TrustMechanism";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "initialSigners",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "reportId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalRevenue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reportHash",
        type: "string",
      },
    ],
    name: "FinancialReportSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedSigner",
        type: "address",
      },
    ],
    name: "SignerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "TransactionConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransactionProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "TreasuryWithdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TREASURY_WITHDRAWAL_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_SIGNATURES_REQUIRED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPORTING_FREQUENCY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedSigners",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "financialReports",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRevenue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalExpenses",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityPoolBalance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reportHash",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastReportTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "proposeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalRevenue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalExpenses",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityPoolBalance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reportHash",
        type: "string",
      },
    ],
    name: "submitFinancialReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSigners",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "confirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015b4380380620015b48339810160408190526200003491620001f6565b6200003f3362000173565b600180558051600311156200009a5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420696e697469616c207369676e65727300000000604482015260640160405180910390fd5b60005b81518110156200016857600160026000848481518110620000c257620000c2620002c8565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550818181518110620001165762000116620002c8565b60200260200101516001600160a01b03167f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f2460405160405180910390a2806200015f81620002de565b9150506200009d565b505160035562000306565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001f157600080fd5b919050565b600060208083850312156200020a57600080fd5b82516001600160401b03808211156200022257600080fd5b818501915085601f8301126200023757600080fd5b8151818111156200024c576200024c620001c3565b8060051b604051601f19603f83011681018181108582111715620002745762000274620001c3565b6040529182528482019250838101850191888311156200029357600080fd5b938501935b82851015620002bc57620002ac85620001d9565b8452938501939285019262000298565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620002ff57634e487b7160e01b600052601160045260246000fd5b5060010190565b61129e80620003166000396000f3fe60806040526004361061010d5760003560e01c80639187a60311610095578063d1a6264811610064578063d1a626481461035f578063ddcb056814610375578063eb12d61e1461038a578063ee22610b146103aa578063f2fde38b146103ca57600080fd5b80639187a603146102885780639a9c3b701461029d5780639ace38c2146102bd578063c01a8c841461033f57600080fd5b806352d9e6b9116100dc57806352d9e6b9146101e057806357db845a14610205578063715018a61461021b5780638a875512146102305780638da5cb5b1461026057600080fd5b80630e316ab71461011957806324fb10c01461013b5780633411c81c14610175578063511a819d146101c057600080fd5b3661011457005b600080fd5b34801561012557600080fd5b50610139610134366004610e56565b6103ea565b005b34801561014757600080fd5b5061015b610156366004610e78565b61051f565b60405161016c959493929190610ed7565b60405180910390f35b34801561018157600080fd5b506101b0610190366004610f0d565b600760209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161016c565b3480156101cc57600080fd5b506101396101db366004610fdc565b6105ed565b3480156101ec57600080fd5b506101f76276a70081565b60405190815260200161016c565b34801561021157600080fd5b506101f760055481565b34801561022757600080fd5b5061013961081e565b34801561023c57600080fd5b506101b061024b366004610e56565b60026020526000908152604090205460ff1681565b34801561026c57600080fd5b506000546040516001600160a01b03909116815260200161016c565b34801561029457600080fd5b506101f7601481565b3480156102a957600080fd5b506101396102b8366004611036565b610832565b3480156102c957600080fd5b5061030f6102d8366004610e78565b60066020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff9091169084565b604080516001600160a01b039095168552602085019390935290151591830191909152606082015260800161016c565b34801561034b57600080fd5b5061013961035a366004610e78565b610963565b34801561036b57600080fd5b506101f760035481565b34801561038157600080fd5b506101f7600381565b34801561039657600080fd5b506101396103a5366004610e56565b610a9c565b3480156103b657600080fd5b506101396103c5366004610e78565b610b7a565b3480156103d657600080fd5b506101396103e5366004610e56565b610cc1565b6103f2610d37565b6001600160a01b03811660009081526002602052604090205460ff166104585760405162461bcd60e51b81526020600482015260166024820152752737ba1030b71030b8383937bb32b21039b4b3b732b960511b60448201526064015b60405180910390fd5b60038054116104b55760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742072656d6f76652062656c6f77206d696e696d756d207369676e60448201526265727360e81b606482015260840161044f565b6001600160a01b0381166000908152600260205260408120805460ff1916905560038054916104e3836110a3565b90915550506040516001600160a01b038216907f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b90600090a250565b6004818154811061052f57600080fd5b906000526020600020906005020160009150905080600001549080600101549080600201549080600301549080600401805461056a906110ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610596906110ba565b80156105e35780601f106105b8576101008083540402835291602001916105e3565b820191906000526020600020905b8154815290600101906020018083116105c657829003601f168201915b5050505050905085565b6276a7006005546105fe91906110f4565b42101561064d5760405162461bcd60e51b815260206004820152601960248201527f5265706f7274207375626d697474656420746f6f20736f6f6e00000000000000604482015260640161044f565b3360009081526002602052604090205460ff166106bd5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920617070726f766564207369676e6572732063616e207375626d6974604482015267207265706f72747360c01b606482015260840161044f565b6040805160a08101825242815260208101868152918101858152606082018581526080830185815260048054600181018255600091909152845160059091027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810191825595517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c87015592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d86015590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e85015551919283927f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f909101906107c8908261115b565b505042600555506004546107de9060019061121b565b7f5488be1acf30276c71adc310818df6dacd6f41507d594fdfa1399699b97e6a47868460405161080f92919061122e565b60405180910390a25050505050565b610826610d37565b6108306000610d91565b565b61083a610de1565b3360009081526002602052604090205460ff166108a35760405162461bcd60e51b815260206004820152602160248201527f4f6e6c7920617070726f766564207369676e6572732063616e2070726f706f736044820152606560f81b606482015260840161044f565b604080516080810182526001600160a01b038581168083526020808401878152600085870181815260608701828152428084526006865292899020975188546001600160a01b031916971696909617875591516001870155905160028601805460ff1916911515919091179055925160039094019390935583519081529182018590529182917f34c1492f2b30aac2446b0b2de2e32501ff4742f7196db5ed9e0ddd6b7d7b25cf910160405180910390a25061095e60018055565b505050565b3360009081526002602052604090205460ff166109cc5760405162461bcd60e51b815260206004820152602160248201527f4f6e6c7920617070726f766564207369676e6572732063616e20636f6e6669726044820152606d60f81b606482015260840161044f565b600081815260076020908152604080832033845290915290205460ff1615610a2a5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb999a5c9b5959607a1b604482015260640161044f565b60008181526007602090815260408083203384528252808320805460ff1916600117905583835260069091528120600301805491610a678361124f565b9091555050604051339082907f15c2f311c9e0f53b50388279894aeff029a3457884a6601e924fca879e12adcc90600090a350565b610aa4610d37565b6001600160a01b03811660009081526002602052604090205460ff1615610b0d5760405162461bcd60e51b815260206004820152601760248201527f5369676e657220616c726561647920617070726f766564000000000000000000604482015260640161044f565b6001600160a01b0381166000908152600260205260408120805460ff191660011790556003805491610b3e8361124f565b90915550506040516001600160a01b038216907f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f2490600090a250565b610b82610de1565b6000818152600660205260409020600281015460ff1615610be55760405162461bcd60e51b815260206004820152601c60248201527f5472616e73616374696f6e20616c726561647920657865637574656400000000604482015260640161044f565b600381600301541015610c3a5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420636f6e6669726d6174696f6e73000000000000604482015260640161044f565b60028101805460ff191660019081179091558154908201546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610c88573d6000803e3d6000fd5b5060405182907f15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c790600090a250610cbe60018055565b50565b610cc9610d37565b6001600160a01b038116610d2e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044f565b610cbe81610d91565b6000546001600160a01b031633146108305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161044f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610e335760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161044f565b6002600155565b80356001600160a01b0381168114610e5157600080fd5b919050565b600060208284031215610e6857600080fd5b610e7182610e3a565b9392505050565b600060208284031215610e8a57600080fd5b5035919050565b6000815180845260005b81811015610eb757602081850181015186830182015201610e9b565b506000602082860101526020601f19601f83011685010191505092915050565b85815284602082015283604082015282606082015260a060808201526000610f0260a0830184610e91565b979650505050505050565b60008060408385031215610f2057600080fd5b82359150610f3060208401610e3a565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f6057600080fd5b813567ffffffffffffffff80821115610f7b57610f7b610f39565b604051601f8301601f19908116603f01168101908282118183101715610fa357610fa3610f39565b81604052838152866020858801011115610fbc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610ff257600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561101e57600080fd5b61102a87828801610f4f565b91505092959194509250565b60008060006060848603121561104b57600080fd5b61105484610e3a565b925060208401359150604084013567ffffffffffffffff81111561107757600080fd5b61108386828701610f4f565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000816110b2576110b261108d565b506000190190565b600181811c908216806110ce57607f821691505b6020821081036110ee57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156111075761110761108d565b92915050565b601f82111561095e57600081815260208120601f850160051c810160208610156111345750805b601f850160051c820191505b8181101561115357828155600101611140565b505050505050565b815167ffffffffffffffff81111561117557611175610f39565b6111898161118384546110ba565b8461110d565b602080601f8311600181146111be57600084156111a65750858301515b600019600386901b1c1916600185901b178555611153565b600085815260208120601f198616915b828110156111ed578886015182559484019460019091019084016111ce565b508582101561120b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156111075761110761108d565b8281526040602082015260006112476040830184610e91565b949350505050565b6000600182016112615761126161108d565b506001019056fea2646970667358221220ae4c8211642d0ee5852271ef062c514063e9ff53bf845e0cf2a639beeca19e8964736f6c63430008140033";

type TrustMechanismConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrustMechanismConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrustMechanism__factory extends ContractFactory {
  constructor(...args: TrustMechanismConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSigners: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialSigners, overrides || {});
  }
  override deploy(
    initialSigners: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialSigners, overrides || {}) as Promise<
      TrustMechanism & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TrustMechanism__factory {
    return super.connect(runner) as TrustMechanism__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustMechanismInterface {
    return new Interface(_abi) as TrustMechanismInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TrustMechanism {
    return new Contract(address, _abi, runner) as unknown as TrustMechanism;
  }
}
