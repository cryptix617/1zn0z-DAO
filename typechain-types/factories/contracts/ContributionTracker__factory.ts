/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ContributionTracker,
  ContributionTrackerInterface,
} from "../../contracts/ContributionTracker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contributionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contributionType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ContributionLogged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contributionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "ContributionRewarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "contributionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "string",
        name: "contributionType",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "rewarded",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
    ],
    name: "getContributorContributions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
      {
        internalType: "string",
        name: "_contributionType",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "logContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_contributionId",
        type: "uint256",
      },
    ],
    name: "rewardContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "rewardRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contributionType",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "updateRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f62380380610f6283398101604081905261002f9161013d565b610038336100ed565b600180546001600160a01b0319166001600160a01b03831617905560405163636f646560e01b815268056bc75e2d6310000090600490810190815260405190819003602001812091909155653232b9b4b3b760d11b8152680410d586a20a4c000090600490600601908152604051908190036020018120919091556c3237b1bab6b2b73a30ba34b7b760991b81526802b5e3af16b188000090600490600d01908152604051908190036020019020555061016d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561014f57600080fd5b81516001600160a01b038116811461016657600080fd5b9392505050565b610de68061017c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610122578063967a05d1146101475780639f43f7291461015a578063bd46cd181461017a578063f2fde38b146101a5578063f7c618c1146101b857600080fd5b80631c8f749c146100ae5780631cee0700146100c35780633afa70c5146100f05780635b18056b14610103578063715018a61461011a575b600080fd5b6100c16100bc3660046108aa565b6101cb565b005b6100d66100d13660046108aa565b6103d6565b6040516100e7959493929190610913565b60405180910390f35b6100c16100fe3660046109f9565b61049c565b61010c60035481565b6040519081526020016100e7565b6100c16104c9565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e7565b61010c610155366004610a5a565b6104dd565b61016d610168366004610ab1565b61062b565b6040516100e79190610ad3565b61010c610188366004610b17565b805160208183018101805160048252928201919093012091525481565b6100c16101b3366004610ab1565b610787565b60015461012f906001600160a01b031681565b6000818152600260205260409020600481015460ff16156102335760405162461bcd60e51b815260206004820152601d60248201527f436f6e747269627574696f6e20616c726561647920726577617264656400000060448201526064015b60405180910390fd5b60006004826001016040516102489190610b8e565b9081526020016040518091039020549050600081116102bb5760405162461bcd60e51b815260206004820152602960248201527f4e6f20726577617264207261746520666f72207468697320636f6e747269627560448201526874696f6e207479706560b81b606482015260840161022a565b600154825460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103339190610c04565b6103785760405162461bcd60e51b815260206004820152601660248201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b604482015260640161022a565b60048201805460ff1916600117905581546040516001600160a01b039091169084907f1d8610ae9fa086ab0a8f32e50f423921a2c8eeedc1c2661e6f25f33ec1d58722906103c99085815260200190565b60405180910390a3505050565b600260205260009081526040902080546001820180546001600160a01b03909216929161040290610b54565b80601f016020809104026020016040519081016040528092919081815260200182805461042e90610b54565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b50505050600283015460038401546004909401549293909290915060ff1685565b6104a4610800565b806004836040516104b59190610c26565b908152604051908190036020019020555050565b6104d1610800565b6104db600061085a565b565b60008083511161052f5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420636f6e747269627574696f6e207479706500000000000000604482015260640161022a565b600380546000918261054083610c42565b909155506040805160a0810182526001600160a01b03888116825260208083018981528385018990524260608501526000608085018190528681526002909252939020825181546001600160a01b031916921691909117815591519293509160018201906105ae9082610cb8565b506040828101516002830155606083015160038301556080909201516004909101805460ff1916911515919091179055516001600160a01b0386169082907f2b9451946218de8562d31624387fa35bfe61de07e01dcdada2a7443ca4055d699061061b9088908890610d78565b60405180910390a3949350505050565b6060600060035467ffffffffffffffff81111561064a5761064a610956565b604051908082528060200260200182016040528015610673578160200160208202803683370190505b5090506000805b6003548110156106e2576000818152600260205260409020546001600160a01b038087169116036106d0578083836106b181610c42565b9450815181106106c3576106c3610d9a565b6020026020010181815250505b806106da81610c42565b91505061067a565b5060008167ffffffffffffffff8111156106fe576106fe610956565b604051908082528060200260200182016040528015610727578160200160208202803683370190505b50905060005b8281101561077e5783818151811061074757610747610d9a565b602002602001015182828151811061076157610761610d9a565b60209081029190910101528061077681610c42565b91505061072d565b50949350505050565b61078f610800565b6001600160a01b0381166107f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161022a565b6107fd8161085a565b50565b6000546001600160a01b031633146104db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108bc57600080fd5b5035919050565b60005b838110156108de5781810151838201526020016108c6565b50506000910152565b600081518084526108ff8160208601602086016108c3565b601f01601f19169290920160200192915050565b6001600160a01b038616815260a060208201819052600090610937908301876108e7565b6040830195909552506060810192909252151560809091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261097d57600080fd5b813567ffffffffffffffff8082111561099857610998610956565b604051601f8301601f19908116603f011681019082821181831017156109c0576109c0610956565b816040528381528660208588010111156109d957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610a0c57600080fd5b823567ffffffffffffffff811115610a2357600080fd5b610a2f8582860161096c565b95602094909401359450505050565b80356001600160a01b0381168114610a5557600080fd5b919050565b600080600060608486031215610a6f57600080fd5b610a7884610a3e565b9250602084013567ffffffffffffffff811115610a9457600080fd5b610aa08682870161096c565b925050604084013590509250925092565b600060208284031215610ac357600080fd5b610acc82610a3e565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610b0b57835183529284019291840191600101610aef565b50909695505050505050565b600060208284031215610b2957600080fd5b813567ffffffffffffffff811115610b4057600080fd5b610b4c8482850161096c565b949350505050565b600181811c90821680610b6857607f821691505b602082108103610b8857634e487b7160e01b600052602260045260246000fd5b50919050565b6000808354610b9c81610b54565b60018281168015610bb45760018114610bc957610bf8565b60ff1984168752821515830287019450610bf8565b8760005260208060002060005b85811015610bef5781548a820152908401908201610bd6565b50505082870194505b50929695505050505050565b600060208284031215610c1657600080fd5b81518015158114610acc57600080fd5b60008251610c388184602087016108c3565b9190910192915050565b600060018201610c6257634e487b7160e01b600052601160045260246000fd5b5060010190565b601f821115610cb357600081815260208120601f850160051c81016020861015610c905750805b601f850160051c820191505b81811015610caf57828155600101610c9c565b5050505b505050565b815167ffffffffffffffff811115610cd257610cd2610956565b610ce681610ce08454610b54565b84610c69565b602080601f831160018114610d1b5760008415610d035750858301515b600019600386901b1c1916600185901b178555610caf565b600085815260208120601f198616915b82811015610d4a57888601518255948401946001909101908401610d2b565b5085821015610d685787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000610d8b60408301856108e7565b90508260208301529392505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220aed7248fdcc6faf68b0d43774ab53a638558975a39c6fb9b42aa9397f43de98564736f6c63430008140033";

type ContributionTrackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContributionTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContributionTracker__factory extends ContractFactory {
  constructor(...args: ContributionTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _rewardTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_rewardTokenAddress, overrides || {});
  }
  override deploy(
    _rewardTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_rewardTokenAddress, overrides || {}) as Promise<
      ContributionTracker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ContributionTracker__factory {
    return super.connect(runner) as ContributionTracker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContributionTrackerInterface {
    return new Interface(_abi) as ContributionTrackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContributionTracker {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ContributionTracker;
  }
}
