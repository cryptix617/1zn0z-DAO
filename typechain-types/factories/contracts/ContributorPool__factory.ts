/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ContributorPool,
  ContributorPoolInterface,
} from "../../contracts/ContributorPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contributionValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum ContributorPool.ContributionType",
        name: "contributionType",
        type: "uint8",
      },
    ],
    name: "ContributionRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "skillSet",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum ContributorPool.ContributionType",
        name: "primarySkill",
        type: "uint8",
      },
    ],
    name: "ContributorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "TokensAllocated",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CONTRIBUTOR_POOL_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allocateContributorTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimVestedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContributorPool.ContributionType",
        name: "",
        type: "uint8",
      },
    ],
    name: "contributionWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contributorAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributors",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "skillSet",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalContribution",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensEarned",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "joinTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
    ],
    name: "getContributorDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "string",
            name: "skillSet",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalContribution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensEarned",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinTimestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct ContributorPool.Contributor",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_contributionValue",
        type: "uint256",
      },
      {
        internalType: "enum ContributorPool.ContributionType",
        name: "_contributionType",
        type: "uint8",
      },
    ],
    name: "recordContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_skillSet",
        type: "string",
      },
      {
        internalType: "enum ContributorPool.ContributionType",
        name: "_primarySkill",
        type: "uint8",
      },
    ],
    name: "registerContributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalContributorTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ContributorPool.ContributionType",
        name: "_type",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_newWeight",
        type: "uint256",
      },
    ],
    name: "updateContributionWeights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161145638038061145683398101604081905261002f9161018f565b6100383361013f565b600380546001600160a01b0319166001600160a01b03929092169190911790556005602081905260647f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc5560507f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b5560467f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55603c7fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc055605a7f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d55560005260557f458b30c2d72bfd2c6317304a4594ecbafe5f729d3111b65fdc3a33bd48e5432d556101bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101a157600080fd5b81516001600160a01b03811681146101b857600080fd5b9392505050565b611288806101ce6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638dcd067611610097578063b8b449ae11610066578063b8b449ae1461020b578063c2f3b7a014610213578063e74f3fbb14610233578063f2fde38b1461023b57600080fd5b80638dcd0676146101b25780638dd08557146101d257806390ed5427146101e55780639702a3a9146101f857600080fd5b8063715018a6116100d3578063715018a61461017d57806377d78f021461018557806384def163146101985780638da5cb5b146101a157600080fd5b80630197d972146101055780631d08eedc146101235780631f6d49421461012d5780634b60ce7714610152575b600080fd5b6101106301e1338081565b6040519081526020015b60405180910390f35b61012b61024e565b005b61014061013b366004610d1e565b6104a7565b60405161011a96959493929190610d86565b600354610165906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61012b610573565b61012b610193366004610de0565b610587565b61011060045481565b6000546001600160a01b0316610165565b6101c56101c0366004610d1e565b6105cc565b60405161011a9190610e0a565b6101656101e0366004610e6e565b610708565b61012b6101f3366004610e87565b610732565b61012b610206366004610ed9565b610864565b610110601481565b610110610221366004610f9b565b60056020526000908152604090205481565b61012b610a3f565b61012b610249366004610d1e565b610bdf565b610256610c58565b600354604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c49190610fb6565b9050600060646102d5601484610fe5565b6102df9190611002565b905080600454106103375760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472696275746f7220706f6f6c2065786861757374656400000000000060448201526064015b60405180910390fd5b6000805b6002548110156103a257600160006002838154811061035c5761035c611024565b60009182526020808320909101546001600160a01b0316835282019290925260400190206002015461038e908361103a565b91508061039a8161104d565b91505061033b565b5060005b6002548110156104a157600060016000600284815481106103c9576103c9611024565b60009182526020808320909101546001600160a01b03168352820192909252604001902060028101549091501561048e5760008385836002015461040d9190610fe5565b6104179190611002565b90508082600301600082825461042d919061103a565b925050819055508060046000828254610446919061103a565b909155505081546040518281526001600160a01b03909116907f3b87361b8a201c697d51aaa7a509f6dfb3870db9e5c5501d22d3e9fae858f7259060200160405180910390a2505b50806104998161104d565b9150506103a6565b50505050565b6001602081905260009182526040909120805491810180546001600160a01b03909316926104d490611066565b80601f016020809104026020016040519081016040528092919081815260200182805461050090611066565b801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b505050506002830154600384015460048501546005909501549394919390925060ff1686565b61057b610c58565b6105856000610cb2565b565b61058f610c58565b80600560008460058111156105a6576105a66110a0565b60058111156105b7576105b76110a0565b81526020810191909152604001600020555050565b6106106040518060c0016040528060006001600160a01b03168152602001606081526020016000815260200160008152602001600081526020016000151581525090565b6001600160a01b03808316600090815260016020818152604092839020835160c081019094528054909416835290830180549293929184019161065290611066565b80601f016020809104026020016040519081016040528092919081815260200182805461067e90611066565b80156106cb5780601f106106a0576101008083540402835291602001916106cb565b820191906000526020600020905b8154815290600101906020018083116106ae57829003601f168201915b505050918352505060028201546020820152600382015460408201526004820154606082015260059091015460ff16151560809091015292915050565b6002818154811061071857600080fd5b6000918252602090912001546001600160a01b0316905081565b61073a610c58565b6001600160a01b03831660009081526001602052604090206005015460ff166107a55760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472696275746f72206e6f742072656769737465726564000000000000604482015260640161032e565b6001600160a01b03831660009081526001602052604081209060058184828111156107d2576107d26110a0565b60058111156107e3576107e36110a0565b815260200190815260200160002054846107fd9190610fe5565b905080826002016000828254610813919061103a565b92505081905550846001600160a01b03167f6ceba69ca8198744fa5861278845c53778b5e7259a1ee798b3b742b45efdbba085856040516108559291906110d8565b60405180910390a25050505050565b60008251116108b55760405162461bcd60e51b815260206004820152601e60248201527f4d7573742070726f7669646520736b696c6c206465736372697074696f6e0000604482015260640161032e565b336000908152600160205260409020546001600160a01b0316156109105760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161032e565b6040805160c081018252338082526020808301868152600084860181905260608501819052426080860152600160a0860181905293815291839052939020825181546001600160a01b0319166001600160a01b0390911617815592519192919082019061097d908261113b565b50604082810151600283810191909155606084015160038401556080840151600484015560a0909301516005909201805460ff19169215159290921790915581546001810183556000929092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9091018054336001600160a01b0319909116811790915590517f9a40933ceabc0558d23773f751f3cb1e66c92f8ec97c727c5a5b41793e32881c90610a3390859085906111fb565b60405180910390a25050565b3360009081526001602052604090206003810154610a945760405162461bcd60e51b81526020600482015260126024820152714e6f20746f6b656e7320746f20636c61696d60701b604482015260640161032e565b6000816004015442610aa6919061121d565b905060006301e13380821015610ad5576301e13380610ac6836064610fe5565b610ad09190611002565b610ad8565b60645b905060006064828560030154610aee9190610fe5565b610af89190611002565b905060008111610b4a5760405162461bcd60e51b815260206004820152601a60248201527f4e6f20746f6b656e732063757272656e746c7920766573746564000000000000604482015260640161032e565b60035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf9190611230565b5080846003016000828254610bd4919061121d565b909155505050505050565b610be7610c58565b6001600160a01b038116610c4c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161032e565b610c5581610cb2565b50565b6000546001600160a01b031633146105855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161032e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610d1957600080fd5b919050565b600060208284031215610d3057600080fd5b610d3982610d02565b9392505050565b6000815180845260005b81811015610d6657602081850181015186830182015201610d4a565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038716815260c060208201819052600090610daa90830188610d40565b905085604083015284606083015283608083015282151560a0830152979650505050505050565b803560068110610d1957600080fd5b60008060408385031215610df357600080fd5b610dfc83610dd1565b946020939093013593505050565b602080825282516001600160a01b03168282015282015160c06040830152600090610e3860e0840182610d40565b90506040840151606084015260608401516080840152608084015160a084015260a0840151151560c08401528091505092915050565b600060208284031215610e8057600080fd5b5035919050565b600080600060608486031215610e9c57600080fd5b610ea584610d02565b925060208401359150610eba60408501610dd1565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610eec57600080fd5b823567ffffffffffffffff80821115610f0457600080fd5b818501915085601f830112610f1857600080fd5b813581811115610f2a57610f2a610ec3565b604051601f8201601f19908116603f01168101908382118183101715610f5257610f52610ec3565b81604052828152886020848701011115610f6b57600080fd5b826020860160208301376000602084830101528096505050505050610f9260208401610dd1565b90509250929050565b600060208284031215610fad57600080fd5b610d3982610dd1565b600060208284031215610fc857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ffc57610ffc610fcf565b92915050565b60008261101f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b80820180821115610ffc57610ffc610fcf565b60006001820161105f5761105f610fcf565b5060010190565b600181811c9082168061107a57607f821691505b60208210810361109a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b600681106110d457634e487b7160e01b600052602160045260246000fd5b9052565b82815260408101610d3960208301846110b6565b601f82111561113657600081815260208120601f850160051c810160208610156111135750805b601f850160051c820191505b818110156111325782815560010161111f565b5050505b505050565b815167ffffffffffffffff81111561115557611155610ec3565b611169816111638454611066565b846110ec565b602080601f83116001811461119e57600084156111865750858301515b600019600386901b1c1916600185901b178555611132565b600085815260208120601f198616915b828110156111cd578886015182559484019460019091019084016111ae565b50858210156111eb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061120e6040830185610d40565b9050610d3960208301846110b6565b81810381811115610ffc57610ffc610fcf565b60006020828403121561124257600080fd5b81518015158114610d3957600080fdfea2646970667358221220972153088b71b895b30557e92aa1a58cda04affe56628d2e6177da79d4314e4264736f6c63430008140033";

type ContributorPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContributorPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContributorPool__factory extends ContractFactory {
  constructor(...args: ContributorPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _projectToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_projectToken, overrides || {});
  }
  override deploy(
    _projectToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_projectToken, overrides || {}) as Promise<
      ContributorPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContributorPool__factory {
    return super.connect(runner) as ContributorPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContributorPoolInterface {
    return new Interface(_abi) as ContributorPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContributorPool {
    return new Contract(address, _abi, runner) as unknown as ContributorPool;
  }
}
